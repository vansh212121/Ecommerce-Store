version: '3.8'

services:
  # API Service (Your FastAPI App)
  api:
    build: .
    container_name: ecommerce_api
    env_file: .env
    ports:
      - "8000:8000"
    volumes:
      - ./src/app:/app/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - ecommerce_net
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: ecommerce_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - ecommerce_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: ecommerce_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - ecommerce_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

# Docker Volumes for data persistence
volumes:
  postgres_data:
    driver: local

# Docker Network for inter-service communication
networks:
  ecommerce_net:
    driver: bridge